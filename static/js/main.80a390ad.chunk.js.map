{"version":3,"sources":["logo.svg","component/city.js","App.js","reportWebVitals.js","index.js"],"names":["City","props","state","zipCode","city","handleChange","bind","axios","get","this","toUpperCase","then","result","tempZip","zip","data","setState","catch","error","console","event","target","name","value","type","onChange","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,qECqDAA,E,kDAhDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAO,CACRC,QAAS,GACTC,KAAM,MAGV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBAPN,E,iEAWG,IAAD,OAChBC,IAAMC,IAAI,yCAA2CC,KAAKP,MAAME,KAAKM,eACpEC,MAAK,SAACC,GACH,IACIC,EAAU,CACVC,IAFYF,EAAOG,MAKvB,EAAKC,SAAS,CACVb,QAASU,OAEdI,OAAM,SAACC,GAAD,OACLC,QAAQD,MAAMA,Q,mCAITE,GACTX,KAAKO,SAAL,eACKI,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,U,+BAGjC,IAAD,OACJ,OACI,gCACI,8DACA,uBAAOC,KAAM,OACbF,KAAK,OACLG,SAAW,SAACL,GAAD,OAAS,EAAKf,aAAae,a,GAvCnCM,aCSJC,MATf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,6CACE,cAAC,EAAD,QCIOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.80a390ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\n\n\nclass City extends Component{\n    constructor(props){\n        super(props);\n        this.state ={\n            zipCode: [],\n            city: null\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n\n    componentDidUpdate(){\n        axios.get(\"http://ctp-zip-api.herokuapp.com/city/\" + this.state.city.toUpperCase())\n        .then((result) => {\n            let zipResult = result.data;\n            let tempZip = {\n                zip : zipResult\n            }\n\n            this.setState({\n                zipCode: tempZip\n            })\n        }).catch((error) =>\n            console.error(error))\n        }\n    \n\n    handleChange(event){\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    render(){\n        return(\n            <div>\n                <h1>enter city in capital letter</h1>\n                <input type =\"text\"\n                name=\"city\"\n                onChange= {(event)=>this.handleChange(event)}></input>\n            </div>\n        )\n    }\n    \n\n    \n    \n}\n\nexport default City;\n","import logo from './logo.svg';\nimport './App.css';\nimport City from \"./component/city\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>City Search</h1>\n        <City />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}